<!DOCTYPE html>
<html dir="ltr" class="client-js" lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>PPU rendering - Nesdev wiki</title>
<meta charset="UTF-8">
<meta name="generator" content="MediaWiki 1.20.2">
<link rel="shortcut icon" href="http://wiki.nesdev.com/favicon.ico">
<link rel="search" type="application/opensearchdescription+xml" href="http://wiki.nesdev.com/w/opensearch_desc.php" title="Nesdev wiki (en)">
<link rel="EditURI" type="application/rsd+xml" href="http://wiki.nesdev.com/w/api.php?action=rsd">
<link rel="alternate" type="application/atom+xml" title="Nesdev wiki Atom feed" href="http://wiki.nesdev.com/w/index.php?title=Special:RecentChanges&amp;feed=atom">
<link rel="stylesheet" href="PPU%20rendering%20-%20Nesdev%20wiki_files/load_002.css">
<!--[if IE 6]><link rel="stylesheet" href="/w/skins/monobook/IE60Fixes.css?303" media="screen" /><![endif]-->
<!--[if IE 7]><link rel="stylesheet" href="/w/skins/monobook/IE70Fixes.css?303" media="screen" /><![endif]--><style>.mw-collapsible-toggle{float:right} li .mw-collapsible-toggle{float:none} .mw-collapsible-toggle-li{list-style:none}
/* cache key: nesdev_wiki-mw1_:resourceloader:filter:minify-css:7:4250852ed2349a0d4d0fc6509a3e7d4c */.suggestions{overflow:hidden;position:absolute;top:0;left:0;width:0;border:none;z-index:1099;padding:0;margin:-1px -1px 0 0} html > body .suggestions{margin:-1px 0 0 0}.suggestions-special{position:relative;background-color:white;cursor:pointer;border:solid 1px #aaaaaa;padding:0;margin:0;margin-top:-2px;display:none;padding:0.25em 0.25em;line-height:1.25em}.suggestions-results{background-color:white;cursor:pointer;border:solid 1px #aaaaaa;padding:0;margin:0}.suggestions-result{color:black;margin:0;line-height:1.5em;padding:0.01em 0.25em;text-align:left}.suggestions-result-current{background-color:#4C59A6;color:white}.suggestions-special .special-label{color:gray;text-align:left}.suggestions-special .special-query{color:black;font-style:italic;text-align:left}.suggestions-special .special-hover{background-color:silver}.suggestions-result-current .special-label,.suggestions-result-current .special-query{color:white}.autoellipsis-matched,.highlight{font-weight:bold}
/* cache key: nesdev_wiki-mw1_:resourceloader:filter:minify-css:7:9780324491b653a3780e2d029bdc140c */</style><meta name="ResourceLoaderDynamicStyles" content="">
<link rel="stylesheet" href="PPU%20rendering%20-%20Nesdev%20wiki_files/load.css">
<style>a:lang(ar),a:lang(ckb),a:lang(fa),a:lang(kk-arab),a:lang(mzn),a:lang(ps),a:lang(ur){text-decoration:none}
/* cache key: nesdev_wiki-mw1_:resourceloader:filter:minify-css:7:b2ff0e5460847bfbc2a67ca6bf6f3969 */</style>

<script src="PPU%20rendering%20-%20Nesdev%20wiki_files/load_004.php"></script><script src="PPU%20rendering%20-%20Nesdev%20wiki_files/load_005.php"></script>
<script>if(window.mw){
mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"PPU_rendering","wgTitle":"PPU rendering","wgCurRevisionId":7997,"wgArticleId":565,"wgIsArticle":true,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":[],"wgBreakFrames":false,"wgPageContentLanguage":"en","wgSeparatorTransformTable":["",""],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","January","February","March","April","May","June","July","August","September","October","November","December"],"wgMonthNamesShort":["","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"wgRelevantPageName":"PPU_rendering","wgRestrictionEdit":[],"wgRestrictionMove":[]});
}</script><script>if(window.mw){
mw.loader.implement("user.options",function(){mw.user.options.set({"ccmeonemails":0,"cols":80,"date":"default","diffonly":0,"disablemail":0,"disablesuggest":0,"editfont":"default","editondblclick":0,"editsection":1,"editsectiononrightclick":0,"enotifminoredits":0,"enotifrevealaddr":0,"enotifusertalkpages":1,"enotifwatchlistpages":0,"extendwatchlist":0,"externaldiff":0,"externaleditor":0,"fancysig":0,"forceeditsummary":0,"gender":"unknown","hideminor":0,"hidepatrolled":0,"imagesize":2,"justify":0,"math":1,"minordefault":0,"newpageshidepatrolled":0,"nocache":0,"noconvertlink":0,"norollbackdiff":0,"numberheadings":0,"previewonfirst":0,"previewontop":1,"quickbar":5,"rcdays":7,"rclimit":50,"rememberpassword":0,"rows":25,"searchlimit":20,"showhiddencats":0,"showjumplinks":1,"shownumberswatching":1,"showtoc":1,"showtoolbar":1,"skin":"monobook","stubthreshold":0,"thumbsize":2,"underline":2,"uselivepreview":0,"usenewrc":0,"watchcreations":0,"watchdefault":0,"watchdeletion":0,"watchlistdays":3,
"watchlisthideanons":0,"watchlisthidebots":0,"watchlisthideliu":0,"watchlisthideminor":0,"watchlisthideown":0,"watchlisthidepatrolled":0,"watchmoves":0,"wllimit":250,"variant":"en","language":"en","searchNs0":true,"searchNs1":false,"searchNs2":false,"searchNs3":false,"searchNs4":false,"searchNs5":false,"searchNs6":false,"searchNs7":false,"searchNs8":false,"searchNs9":false,"searchNs10":false,"searchNs11":false,"searchNs12":false,"searchNs13":false,"searchNs14":false,"searchNs15":false});;},{},{});mw.loader.implement("user.tokens",function(){mw.user.tokens.set({"editToken":"+\\","watchToken":false});;},{},{});
/* cache key: nesdev_wiki-mw1_:resourceloader:filter:minify-js:7:c89fc005766e312c555f83b307d08d63 */
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.page.startup","mediawiki.legacy.wikibits","mediawiki.legacy.ajax"]);
}</script><script type="text/javascript" src="PPU%20rendering%20-%20Nesdev%20wiki_files/load_003.php"></script><link href="PPU%20rendering%20-%20Nesdev%20wiki_files/FF2Fixes.css" rel="stylesheet" type="text/css">
</head>
<body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-PPU_rendering skin-monobook action-view">
<div id="globalWrapper">
<div id="column-content"><div id="content" class="mw-body-primary">
	<a id="top"></a>
	
	<h1 id="firstHeading" class="firstHeading"><span dir="auto">PPU rendering</span></h1>
	<div id="bodyContent" class="mw-body">
		<div id="siteSub">From Nesdev wiki</div>
		<div id="contentSub"></div>
		<div id="jump-to-nav" class="mw-jump">Jump to: <a href="#column-one">navigation</a>, <a href="#searchInput">search</a></div>
		<!-- start content -->
<div id="mw-content-text" dir="ltr" class="mw-content-ltr" lang="en"><p>The PPU contains the following:
</p>
<ul><li>Background
<ul><li>VRAM address, temporary VRAM address, fine X scroll, and 
first/second write toggle - This controls the addresses that the PPU 
reads during background rendering. See <a href="http://wiki.nesdev.com/w/index.php/The_skinny_on_NES_scrolling" title="The skinny on NES scrolling">The skinny on NES scrolling</a>.
</li><li>2 16-bit shift registers - These contain the bitmap data for 
two tiles. Every 8 cycles, the bitmap data for the next tile is loaded 
into the upper 8 bits of this shift register. Meanwhile, the pixel to 
render is fetched from one of the lower 8 bits.
</li><li>2 8-bit shift registers - These contain the palette attributes 
for the lower 8 pixels of the 16-bit shift register. These registers are
 fed by a latch which contains the palette attribute for the next tile. 
Every 8 cycles, the latch is loaded with the palette attribute for the 
next tile.
</li></ul>
</li><li>Sprites
<ul><li>Primary OAM (holds 64 sprites for the frame)
</li><li>Secondary OAM (holds 8 sprites for the current scanline)
</li><li>8 pairs of 8-bit shift registers - These contain the bitmap 
data for up to 8 sprites, to be rendered on the current scanline. Unused
 sprites are loaded with an all-transparent bitmap.
</li><li>8 latches - These contain the attribute bytes for up to 8 sprites.
</li><li>8 counters - These contain the X positions for up to 8 sprites.
</li></ul>
</li></ul>
<pre>                                         [BBBBBBBB] - Next tile's pattern data,
                                         [BBBBBBBB] - 2 bits per pixel
                                          ||||||||
                                          vvvvvvvv
      Serial-to-parallel - [AAAAAAAA] &lt;- [BBBBBBBB] - Parallel-to-serial
         shift registers - [AAAAAAAA] &lt;- [BBBBBBBB] - shift registers
                            vvvvvvvv
                            ||||||||           [Sprites 0..7]----+
                            ||||||||                             |
[fine_x selects a bit]----&gt;[  Mux   ]--------------------&gt;[Priority mux]-----&gt;[Pixel]
                            ||||||||
                            ^^^^^^^^
                           [PPPPPPPP] &lt;- [1-bit latch]
                           [PPPPPPPP] &lt;- [1-bit latch]
                                               ^
                                               |
                    [2-bit Palette Attribute for next tile (from attribute table)]
</pre>
<p>Every cycle, a bit is fetched from the 4 background shift registers 
in order to create a pixel on screen. Exactly which bit is fetched 
depends on the fine X scroll, set by $2005 (this is how fine X scrolling
 is possible). Afterwards, the shift registers are shifted once, to the 
data for the next pixel.
</p><p>Every 8 cycles/shifts, new data is loaded into these registers.
</p><p>Every cycle, the 8 x-position counters for the sprites are 
decremented by one. For each sprite, if the counter is still nonzero, 
nothing else happens. If the counter is zero, the sprite becomes 
"active", and the respective pair of shift registers for the sprite is 
shifted once every cycle. This output accompanies the data in the 
sprite's latch, to form a pixel. The current pixel for each "active" 
sprite is checked (from highest to lowest priority), and the first 
non-transparent pixel moves on to a multiplexer, where it joins the BG 
pixel.
</p>
<table class="tabular" style="float:right; margin: 0 0 0.5em 1em">
<caption> Priority multiplexer decision table
</caption>
<tbody><tr>
<th> BG pixel </th>
<th> Sprite pixel </th>
<th> Priority </th>
<th> Output
</th></tr>
<tr>
<td> 0 </td>
<td> 0 </td>
<td> X </td>
<td> <a href="http://wiki.nesdev.com/w/index.php/Talk:PPU_pin_out_and_signal_description" title="Talk:PPU pin out and signal description">BG ($3F00)</a>
</td></tr>
<tr>
<td> 0 </td>
<td> 1-3 </td>
<td> X </td>
<td> Sprite
</td></tr>
<tr>
<td> 1-3 </td>
<td> 0 </td>
<td> X </td>
<td> BG
</td></tr>
<tr>
<td> 1-3 </td>
<td> 1-3 </td>
<td> 0 </td>
<td> Sprite
</td></tr>
<tr>
<td> 1-3 </td>
<td> 1-3 </td>
<td> 1 </td>
<td> BG
</td></tr></tbody></table>
<ul><li> If the sprite has foreground priority or the BG pixel is zero, the sprite pixel is output.
</li><li> If the sprite has background priority and the BG pixel is nonzero, the BG pixel is output. (<b>Note:</b> Even though the sprite is "behind the background", it was <i>still</i>
 the the highest priority sprite to have a non-transparent pixel, and 
thus the only sprite to be looked at. Therefore, the BG pixel is output 
even if another foreground priority sprite is present at this pixel. 
This is where the <a href="http://wiki.nesdev.com/w/index.php/PPU_sprite_priority" title="PPU sprite priority">sprite priority quirk</a> comes from.)
</li></ul>
<table id="toc" class="toc"><tbody><tr><td><div id="toctitle"><h2>Contents</h2><span class="toctoggle">&nbsp;[<a href="#" class="internal" id="togglelink">hide</a>]&nbsp;</span></div>
<ul>
<li class="toclevel-1 tocsection-1"><a href="#Line-by-line_timing"><span class="tocnumber">1</span> <span class="toctext">Line-by-line timing</span></a>
<ul>
<li class="toclevel-2 tocsection-2"><a href="#Pre-render_scanline_.28-1.2C_261.29"><span class="tocnumber">1.1</span> <span class="toctext">Pre-render scanline (-1, 261)</span></a></li>
<li class="toclevel-2 tocsection-3"><a href="#Visible_scanlines_.280-239.29"><span class="tocnumber">1.2</span> <span class="toctext">Visible scanlines (0-239)</span></a>
<ul>
<li class="toclevel-3 tocsection-4"><a href="#Cycle_0"><span class="tocnumber">1.2.1</span> <span class="toctext">Cycle 0</span></a></li>
<li class="toclevel-3 tocsection-5"><a href="#Cycles_1-256"><span class="tocnumber">1.2.2</span> <span class="toctext">Cycles 1-256</span></a></li>
<li class="toclevel-3 tocsection-6"><a href="#Cycles_257-320"><span class="tocnumber">1.2.3</span> <span class="toctext">Cycles 257-320</span></a></li>
<li class="toclevel-3 tocsection-7"><a href="#Cycles_321-336"><span class="tocnumber">1.2.4</span> <span class="toctext">Cycles 321-336</span></a></li>
<li class="toclevel-3 tocsection-8"><a href="#Cycles_337-340"><span class="tocnumber">1.2.5</span> <span class="toctext">Cycles 337-340</span></a></li>
</ul>
</li>
<li class="toclevel-2 tocsection-9"><a href="#Post-render_scanline_.28240.29"><span class="tocnumber">1.3</span> <span class="toctext">Post-render scanline (240)</span></a></li>
<li class="toclevel-2 tocsection-10"><a href="#Vertical_blanking_lines_.28241-260.29"><span class="tocnumber">1.4</span> <span class="toctext">Vertical blanking lines (241-260)</span></a></li>
</ul>
</li>
<li class="toclevel-1 tocsection-11"><a href="#PPU_address_bus_contents"><span class="tocnumber">2</span> <span class="toctext">PPU address bus contents</span></a></li>
<li class="toclevel-1 tocsection-12"><a href="#Frame_timing_diagram"><span class="tocnumber">3</span> <span class="toctext">Frame timing diagram</span></a></li>
<li class="toclevel-1 tocsection-13"><a href="#See_also"><span class="tocnumber">4</span> <span class="toctext">See also</span></a></li>
<li class="toclevel-1 tocsection-14"><a href="#References"><span class="tocnumber">5</span> <span class="toctext">References</span></a></li>
</ul>
</td></tr></tbody></table>
<h2> <span class="mw-headline" id="Line-by-line_timing"> Line-by-line timing </span></h2>
<p>The PPU renders 262 scanlines per frame. Each scanline lasts for 341 
PPU clock cycles (113.667 CPU clock cycles; 1 CPU cycle = 3 PPU cycles),
 with each clock cycle producing one pixel. The line numbers given here 
correspond to how the internal PPU frame counters count lines.
</p><p>The information in this section is summarized in the diagram in the next section.
</p><p>The timing below is for NTSC PPUs.
PPUs for 50 Hz TV systems <a href="http://wiki.nesdev.com/w/index.php/Clock_rate" title="Clock rate">differ</a>:
PAL NES PPUs render 70 vblank scanlines instead of 20, and Dendy PPUs render 51 post-render scanlines instead of 1.
</p>
<h3> <span class="mw-headline" id="Pre-render_scanline_.28-1.2C_261.29"> Pre-render scanline (-1, 261) </span></h3>
<p>This is a dummy scanline, whose sole purpose is to fill the shift 
registers with the data for the first two tiles of the next scanline. 
Although no pixels are rendered for this scanline, the PPU <i>still</i> makes the same memory accesses it would for a regular scanline.
</p><p>This scanline varies in length, depending on whether an even or 
an odd frame is being rendered. For odd frames, the cycle at the end of 
the scanline is skipped (this is done internally by jumping directly 
from (339,261) to (0,0), replacing the idle tick at the beginning of the
 first visible scanline with the last tick of the last dummy nametable 
fetch). For even frames, the last cycle occurs normally. This is done to
 compensate for some shortcomings with the way the PPU physically 
outputs its video signal, the end result being a crisper image when the 
screen isn't scrolling. However, this behavior can be bypassed by 
keeping rendering disabled until after this scanline has passed, which 
results in an image that looks more like a traditionally interlaced 
picture.
</p><p>During pixels 280 through 304 of this scanline, the vertical scroll bits are reloaded if rendering is enabled.
</p>
<h3> <span class="mw-headline" id="Visible_scanlines_.280-239.29"> Visible scanlines (0-239) </span></h3>
<p>These are the visible scanlines, which contain the graphics to be 
displayed on the screen. This includes the rendering of both the 
background and the sprites. During these scanlines, the PPU is busy 
fetching data, so the program should <i>not</i> access PPU memory during this time, <a href="http://wiki.nesdev.com/w/index.php/PPU_registers#Mask_.28.242001.29_.3E_write" title="PPU registers">unless rendering is turned off</a>.
</p>
<h4> <span class="mw-headline" id="Cycle_0"> Cycle 0 </span></h4>
<p>This is an idle cycle. The value on the PPU address bus during this 
cycle appears to be the same CHR address that is later used to fetch the
 low background tile byte starting at dot 5 (possibly calculated during 
the two unused NT fetches at the end of the previous scanline).
</p>
<h4> <span class="mw-headline" id="Cycles_1-256"> Cycles 1-256 </span></h4>
<p>The data for each tile is fetched during this phase. Each memory 
access takes 2 PPU cycles to complete, and 4 must be performed per tile:
</p>
<ol><li>Nametable byte
</li><li>Attribute table byte
</li><li>Tile bitmap low
</li><li>Tile bitmap high (+8 bytes from tile bitmap low)
</li></ol>
<p>The data fetched from these accesses is placed into internal latches,
 and then fed to the appropriate shift registers when it's time to do so
 (every 8 cycles). Because the PPU can only fetch an attribute byte 
every 8 cycles, each sequential string of 8 pixels is forced to have the
 same palette attribute.
</p><p>Sprite zero hits act as if the image starts at cycle 2 (which is 
the same cycle that the shifters shift for the first time), so the 
sprite zero flag will be raised at this point at the earliest. Actual 
pixel output is delayed further due to internal render pipelining, and 
the first pixel is output during cycle 4.
</p><p>The shifters are reloaded during ticks 9, 17, 25, ..., 257.
</p><p><b>Note:</b> At the beginning of each scanline, the data for the 
first two tiles is already loaded into the shift registers (and ready to
 be rendered), so the first tile that gets fetched is Tile 3.
</p><p>While all of this is going on, <a href="http://wiki.nesdev.com/w/index.php/PPU_sprite_evaluation" title="PPU sprite evaluation">sprite evaluation</a> for the <i>next</i> scanline is taking place as a seperate process, independent to what's happening here.
</p>
<h4> <span class="mw-headline" id="Cycles_257-320"> Cycles 257-320 </span></h4>
<p>The tile data for the sprites on the <i>next</i> scanline are fetched
 here. Again, each memory access takes 2 PPU cycles to complete, and 4 
are performed for each of the 8 sprites:
</p>
<ol><li>Garbage nametable byte
</li><li>Garbage nametable byte
</li><li>Tile bitmap low
</li><li>Tile bitmap high (+8 bytes from tile bitmap low)
</li></ol>
<p>The garbage fetches occur so that the same circuitry that performs 
the BG tile fetches could be reused for the sprite tile fetches.
</p><p>If there are less than 8 sprites on the next scanline, then dummy
 fetches to tile $FF occur for the left-over sprites, because of the 
dummy sprite data in the secondary OAM (see <a href="http://wiki.nesdev.com/w/index.php/PPU_sprite_evaluation" title="PPU sprite evaluation">sprite evaluation</a>). This data is then discarded, and the sprites are loaded with a transparent bitmap instead.
</p><p>In addition to this, the X positions and attributes for each 
sprite are loaded from the secondary OAM into their respective 
counters/latches. This happens during the second garbage nametable 
fetch, with the attribute byte loaded during the first tick and the X 
coordinate during the second.
</p>
<h4> <span class="mw-headline" id="Cycles_321-336"> Cycles 321-336 </span></h4>
<p>This is where the first two tiles for the <i>next</i> scanline are 
fetched, and loaded into the shift registers. Again, each memory access 
takes 2 PPU cycles to complete, and 4 are performed for the two tiles:
</p>
<ol><li>Nametable byte
</li><li>Attribute table byte
</li><li>Tile bitmap low
</li><li>Tile bitmap high (+8 bytes from tile bitmap low)
</li></ol>
<h4> <span class="mw-headline" id="Cycles_337-340"> Cycles 337-340 </span></h4>
<p>Two bytes are fetched, but the purpose for this is unknown. These fetches are 2 PPU cycles each.
</p>
<ol><li>Nametable byte
</li><li>Nametable byte
</li></ol>
<p>Both of the bytes fetched here are the same nametable byte that will 
be fetched at the beginning of the next scanline (tile 3, in other 
words).
At least <a href="http://wiki.nesdev.com/w/index.php/MMC5" title="MMC5">one mapper</a> is known to use this string of three consecutive nametable fetches to clock a scanline counter.
</p>
<h3> <span class="mw-headline" id="Post-render_scanline_.28240.29"> Post-render scanline (240) </span></h3>
<p>The PPU just idles during this scanline. Even though accessing PPU 
memory from the program would be safe here, the VBlank flag isn't set 
until <i>after</i> this scanline.
</p>
<h3> <span class="mw-headline" id="Vertical_blanking_lines_.28241-260.29"> Vertical blanking lines (241-260) </span></h3>
<p>The VBlank flag of the PPU is set at tick 1 (the <i>second</i> tick) 
of scanline 241, where the VBlank NMI also occurs. The PPU makes no 
memory accesses during these scanlines, so PPU memory can be freely 
accessed by the program.
</p>
<h2> <span class="mw-headline" id="PPU_address_bus_contents"> PPU address bus contents </span></h2>
<p>During frame rendering, provided rendering is enabled (i.e., when either background or sprite rendering is enabled in <a href="http://wiki.nesdev.com/w/index.php/PPU_registers" title="PPU registers">$2001:3-4</a>),
 the value on the PPU address bus is as indicated in the descriptions 
above and in the frame timing diagram below. During VBlank and when 
rendering is disabled, the value on the PPU address bus is the current 
value of the <a href="http://wiki.nesdev.com/w/index.php/The_skinny_on_NES_scrolling" title="The skinny on NES scrolling">v</a> register.
</p><p>To save pins, the PPU multiplexes the lower eight VRAM address 
pins, also using them as the VRAM data pins. This leads to each VRAM 
access taking two PPU cycles:
</p>
<ol><li> During the first cycle, the entire VRAM address is output on 
the PPU address pins and the lower eight bits stored in an external 
octal latch by asserting the ALE (Address Latch Enable) line. (The octal
 latch is the lower chip to the right of the PPU in <a href="http://wiki.nesdev.com/w/images/f/f3/Neswires.jpg" class="internal" title="Neswires.jpg">this wiring diagram</a>.)
</li><li> During the second cycle, the PPU only outputs the upper six 
bits of the address, with the octal latch providing the lower eight bits
 (VRAM addresses are 14 bits long). During this cycle, the value is read
 from or written to the lower eight address pins.
</li></ol>
<p>As an example, the PPU VRAM address pins will have the value $2001 
followed by the value $20AB for a read from VRAM address $2001 that 
returns the value $AB.
</p>
<h2> <span class="mw-headline" id="Frame_timing_diagram"> Frame timing diagram </span></h2>
<div class="thumb tnone"><div class="thumbinner" style="width:664px;"><a href="http://wiki.nesdev.com/w/index.php/File:Ntsc_timing.png" class="image"><img alt="" src="PPU%20rendering%20-%20Nesdev%20wiki_files/662px-Ntsc_timing.png" class="thumbimage" height="272" width="662"></a>  <div class="thumbcaption"><div class="magnify"><a href="http://wiki.nesdev.com/w/index.php/File:Ntsc_timing.png" class="internal" title="Enlarge"><img src="PPU%20rendering%20-%20Nesdev%20wiki_files/magnify-clip.png" alt="" height="11" width="15"></a></div>NTSC timing diagram</div></div></div>
<p>(<a href="http://wiki.nesdev.com/w/index.php/File:Ppu.svg" title="File:Ppu.svg">Source Inkscape SVG file</a>)
</p>
<h2> <span class="mw-headline" id="See_also"> See also </span></h2>
<ul><li> <a href="http://wiki.nesdev.com/w/index.php/Nametable" title="Nametable" class="mw-redirect">Nametable</a>
</li><li> <a href="http://wiki.nesdev.com/w/index.php/Attribute_table" title="Attribute table" class="mw-redirect">Attribute table</a>
</li><li> <a href="http://wiki.nesdev.com/w/index.php/NTSC_video" title="NTSC video">NTSC video</a>
</li></ul>
<h1> <span class="mw-headline" id="References"> References </span></h1>
<ul><li><a rel="nofollow" class="external text" href="http://nesdev.com/2C02%20technical%20reference.TXT">NTSC 2C02 technical reference</a>
</li></ul>

<!-- 
NewPP limit report
Preprocessor visited node count: 55/1000000
Preprocessor generated node count: 60/1000000
Post-expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
-->

<!-- Saved in parser cache with key nesdev_wiki-mw1_:pcache:idhash:565-0!*!0!!en!2!* and timestamp 20140412155401 -->
</div><div class="printfooter">
Retrieved from "<a href="http://wiki.nesdev.com/w/index.php?title=PPU_rendering&amp;oldid=7997">http://wiki.nesdev.com/w/index.php?title=PPU_rendering&amp;oldid=7997</a>"</div>
		<div id="catlinks" class="catlinks catlinks-allhidden"></div>		<!-- end content -->
				<div class="visualClear"></div>
	</div>
</div></div>
<div id="column-one">
	<div id="p-cactions" class="portlet">
		<h5>Views</h5>
		<div class="pBody">
			<ul>
				<li id="ca-nstab-main" class="selected"><a href="http://wiki.nesdev.com/w/index.php/PPU_rendering" primary="1" context="subject" title="View the content page [alt-shift-c]" accesskey="c">Page</a></li>
				<li id="ca-talk"><a href="http://wiki.nesdev.com/w/index.php/Talk:PPU_rendering" primary="1" context="talk" title="Discussion about the content page [alt-shift-t]" accesskey="t">Discussion</a></li>
				<li id="ca-viewsource"><a href="http://wiki.nesdev.com/w/index.php?title=PPU_rendering&amp;action=edit" primary="1" title="This page is protected.
You can view its source [alt-shift-e]" accesskey="e">View source</a></li>
				<li id="ca-history"><a href="http://wiki.nesdev.com/w/index.php?title=PPU_rendering&amp;action=history" rel="archives" title="Past revisions of this page [alt-shift-h]" accesskey="h">History</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-personal">
		<h5>Personal tools</h5>
		<div class="pBody">
			<ul>
				<li id="pt-createaccount"><a href="http://wiki.nesdev.com/w/index.php?title=Special:UserLogin&amp;returnto=PPU+rendering&amp;type=signup">Create account</a></li>
				<li id="pt-login"><a href="http://wiki.nesdev.com/w/index.php?title=Special:UserLogin&amp;returnto=PPU+rendering" title="You are encouraged to log in; however, it is not mandatory [alt-shift-o]" accesskey="o">Log in</a></li>
			</ul>
		</div>
	</div>
	<div class="portlet" id="p-logo">
<a href="http://wiki.nesdev.com/w/index.php/Nesdev_Wiki" style="background-image: url(/w/skins/common/images/NESdevWikiLogo7.png);" title="Visit the main page"></a>
	</div>
	<div class="generated-sidebar portlet" id="p-navigation">
		<h5>Navigation</h5>
		<div class="pBody">
			<ul>
				<li id="n-Nesdev-main-page"><a href="http://wiki.nesdev.com/w/index.php/Nesdev">Nesdev main page</a></li>
				<li id="n-Wiki-main-page"><a href="http://wiki.nesdev.com/w/index.php/Nesdev_Wiki">Wiki main page</a></li>
				<li id="n-NES-reference-guide"><a href="http://wiki.nesdev.com/w/index.php/NES_reference_guide">NES reference guide</a></li>
				<li id="n-Programming-guide"><a href="http://wiki.nesdev.com/w/index.php/Programming_guide">Programming guide</a></li>
				<li id="n-Projects"><a href="http://wiki.nesdev.com/w/index.php/Projects">Projects</a></li>
				<li id="n-Offline-HTML-version"><a href="http://wiki.nesdev.com/w/nesdevwiki_2014-03-13.zip" rel="nofollow">Offline HTML version</a></li>
				<li id="n-NESdev-BBS"><a href="http://forums.nesdev.com/" rel="nofollow">NESdev BBS</a></li>
				<li id="n-.23NESdev"><a href="http://wiki.nesdev.com/w/index.php/NESdev_IRC_channel">#NESdev</a></li>
				<li id="n-recentchanges"><a href="http://wiki.nesdev.com/w/index.php/Special:RecentChanges" title="A list of recent changes in the wiki [alt-shift-r]" accesskey="r">Recent changes</a></li>
			</ul>
		</div>
	</div>
	<div id="p-search" class="portlet">
		<h5><label for="searchInput">Search</label></h5>
		<div id="searchBody" class="pBody">
			<form action="/w/index.php" id="searchform">
				<input name="title" value="Special:Search" type="hidden">
				<input placeholder="Search" autocomplete="off" name="search" title="Search Nesdev wiki [alt-shift-f]" accesskey="f" id="searchInput" type="search">
				<input name="go" value="Go" title="Go to a page with this exact name if exists" id="searchGoButton" class="searchButton" type="submit">&nbsp;
				<input name="fulltext" value="Search" title="Search the pages for this text" id="mw-searchButton" class="searchButton" type="submit">
			</form>
		</div>
	</div>
	<div class="portlet" id="p-tb">
		<h5>Toolbox</h5>
		<div class="pBody">
			<ul>
				<li id="t-whatlinkshere"><a href="http://wiki.nesdev.com/w/index.php/Special:WhatLinksHere/PPU_rendering" title="A list of all wiki pages that link here [alt-shift-j]" accesskey="j">What links here</a></li>
				<li id="t-recentchangeslinked"><a href="http://wiki.nesdev.com/w/index.php/Special:RecentChangesLinked/PPU_rendering" title="Recent changes in pages linked from this page [alt-shift-k]" accesskey="k">Related changes</a></li>
				<li id="t-specialpages"><a href="http://wiki.nesdev.com/w/index.php/Special:SpecialPages" title="A list of all special pages [alt-shift-q]" accesskey="q">Special pages</a></li>
				<li id="t-print"><a href="http://wiki.nesdev.com/w/index.php?title=PPU_rendering&amp;printable=yes" rel="alternate" title="Printable version of this page [alt-shift-p]" accesskey="p">Printable version</a></li>
				<li id="t-permalink"><a href="http://wiki.nesdev.com/w/index.php?title=PPU_rendering&amp;oldid=7997" title="Permanent link to this revision of the page">Permanent link</a></li>
			</ul>
		</div>
	</div>
</div><!-- end of the left (by default at least) column -->
<div class="visualClear"></div>
<div id="footer">
	<div id="f-poweredbyico">
		<a href="http://www.mediawiki.org/"><img src="PPU%20rendering%20-%20Nesdev%20wiki_files/poweredby_mediawiki_88x31.png" alt="Powered by MediaWiki" height="31" width="88"></a>
	</div>
	<ul id="f-list">
		<li id="lastmod"> This page was last modified on 11 January 2014, at 12:43.</li>
		<li id="viewcount">This page has been accessed 13,447 times.</li>
		<li id="privacy"><a href="http://wiki.nesdev.com/w/index.php/Nesdev_wiki:Privacy_policy" title="Nesdev wiki:Privacy policy">Privacy policy</a></li>
		<li id="about"><a href="http://wiki.nesdev.com/w/index.php/Nesdev_wiki:About" title="Nesdev wiki:About">About Nesdev wiki</a></li>
		<li id="disclaimer"><a href="http://wiki.nesdev.com/w/index.php/Nesdev_wiki:General_disclaimer" title="Nesdev wiki:General disclaimer">Disclaimers</a></li>
	</ul>
</div>
</div>
<script>if(window.mw){
mw.loader.state({"site":"loading","user":"missing","user.groups":"ready"});
}</script>
<script>if(window.mw){
mw.loader.load(["mediawiki.user","mediawiki.page.ready","mediawiki.searchSuggest"], null, true);
}</script><script type="text/javascript" src="PPU%20rendering%20-%20Nesdev%20wiki_files/load_002.php"></script>
<script src="PPU%20rendering%20-%20Nesdev%20wiki_files/load.php"></script>
<!-- Served in 0.130 secs. --><div class="suggestions" style="display: none; font-size: 11.4667px;"><div class="suggestions-results"></div><div class="suggestions-special"></div></div></body></html>