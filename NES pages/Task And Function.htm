<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta name="RESOURCE-TYPE" content="DOCUMENT">
<meta name="DISTRIBUTION" content="GLOBAL">
<meta name="AUTHOR" content="Deepak Kumar Tala">
<meta name="COPYRIGHT" content="Copyright (c) 1998-2014 by www.asic-world.com">
<meta name="KEYWORDS" content="Verilog Tutorial, Verilog Tools, Verilog Interview Questions, Operators, always, initial, reg, wire, $display, $monitor, $memreadh, pli,acc routines, tf routines, vpi routines, Verilog 2001, Writing Verilog Testbenches, History of Verilog, FAQ, Books, FSM, Verilog Examples
">
<meta name="DESCRIPTION" content="This page contains Verilog tutorial, Verilog Syntax, Verilog Quick Reference, PLI, modelling memory and FSM, Writing Testbenches in Verilog, Lot of Verilog Examples and Verilog in One Day Tutorial.
">
<meta name="ROBOTS" content="INDEX, FOLLOW">
<meta name="REVISIT-AFTER" content="7 DAYS">
<meta name="RATING" content="GENERAL">
<meta name="GENERATOR" content="genhtml.pl Version 1.16">
<title>Task And Function </title>
<style type="text/css"> @import url(/css/main.css); </style>
<style type="text/css"> @import url(/css/syntax.css); </style>
</head>

<body>
<div align="center">
<center>
<table id="banner">
<tbody><tr>
<td id="b502">
<p id="cent"><b><font id="banner">Task And Function</font></b></p>
</td>
</tr>
<tr>
<td id="b502">
<p id="cent"><font id="date">Feb-9-2014</font></p>
<p id="cent"><a href="http://www.smart-dv.com/"><img alt="Smart-DV Technologies" src="Task%20And%20Function_files/hit_target.gif"></a></p>
<p id="cent"><font id="date"></font></p>
</td>
</tr>
</tbody></table>
</center>
</div>



<center><div id="cent">
<center><table id="main">
<tbody><tr nosave="">
<!-- Side Index Begin -->
<td nosave="" rowspan="2" bgcolor="#c0c0c0" valign="top" width="120">
<div align="center">
<table border="0" cellpadding="0" cellspacing="0" width="100">
<tbody><tr>
<td>
<img alt="quick.gif" src="Task%20And%20Function_files/quick.gif" height="35" align="middle" border="0" width="120"></td>
</tr>
<tr>
<td><p id="cent"><img alt="space2.gif" src="Task%20And%20Function_files/space2.gif" id="lspace"></p></td>
</tr>
<tr>
<td> 
<p id="cent"><a href="http://www.asic-world.com/verilog/index.html"><img src="Task%20And%20Function_files/verilog.gif" border="0"></a></p>
</td>
</tr>
<tr>
<td> 
<p id="cent"><img src="Task%20And%20Function_files/tutorial_b.gif" border="0"></p>
</td>
</tr>
<tr>
<td> 
<p id="cent"><a href="http://www.asic-world.com/examples/verilog/index.html"><img src="Task%20And%20Function_files/example.gif" border="0"></a></p>
</td>
</tr>
<tr>
<td> 
<p id="cent"><a href="http://www.asic-world.com/verilog/questions.html"><img src="Task%20And%20Function_files/questions.gif" border="0"></a></p>
</td>
</tr>
<tr>
<td> 
<p id="cent"><a href="http://www.asic-world.com/verilog/tools.html"><img src="Task%20And%20Function_files/tools.gif" border="0"></a></p>
</td>
</tr>
<tr>
<td> 
<p id="cent"><a href="http://www.asic-world.com/verilog/books.html"><img src="Task%20And%20Function_files/books.gif" border="0"></a></p>
</td>
</tr>
<tr>
<td> 
<p id="cent"><a href="http://www.asic-world.com/verilog/verilinks.html"><img src="Task%20And%20Function_files/links.gif" border="0"></a></p>
</td>
</tr>
<tr>
<td> 
<p id="cent"><a href="http://www.asic-world.com/verilog/verifaq.html"><img src="Task%20And%20Function_files/faq.gif" border="0"></a></p>
</td>
</tr>
<tr>
<td><p id="cent"><img alt="space2.gif" src="Task%20And%20Function_files/space2.gif" id="lspace"></p></td>
</tr>
<tr>
<td><p id="cent"><img alt="space2.gif" src="Task%20And%20Function_files/space2.gif" id="lspace"></p></td>
</tr>
<tr>
<td> 
<p id="cent"><a href="http://www.asic-world.com/sponsor.html"><img src="Task%20And%20Function_files/sponsor.gif" border="0"></a></p>
</td>
</tr>
<tr>
<td> 
<p id="cent"><a href="http://www.asic-world.com/index.html"><img src="Task%20And%20Function_files/home.gif" border="0"></a></p>
</td>
</tr>
<tr>
<td> 
<p id="cent"><a href="http://www.asic-world.com/disclaimer.html"><img src="Task%20And%20Function_files/disclaimer.gif" border="0"></a></p>
</td>
</tr>
<tr>
<td> 
<p id="cent"><a href="http://www.asic-world.com/faq.html"><img src="Task%20And%20Function_files/faq.gif" border="0"></a></p>
</td>
</tr>
<tr>
<td><p id="cent"><img alt="space2.gif" src="Task%20And%20Function_files/space2.gif" id="lspace"></p></td>
</tr>
<tr>
<td> 
<p align="center"><a href="http://www.asic-world.com/jobs.html"><img src="Task%20And%20Function_files/hot_jobs.jpg" height="48" border="0" width="64"></a></p>
</td>
</tr>
<tr>
<td><p id="cent"><img alt="space2.gif" src="Task%20And%20Function_files/space2.gif" id="lspace"></p></td>
</tr>
<tr align="center">
<td align="center"> <script type="text/javascript"><!--
google_ad_client = "pub-2374649057738228";
google_ad_slot = "1415848535";
google_ad_width = 120;
google_ad_height = 90;
//--></script>
<script type="text/javascript" src="Task%20And%20Function_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:120px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:120px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;" frameborder="0" height="90" scrolling="no" width="120"></iframe></ins></ins>
</td>
</tr>
<tr>
<td><p id="cent"><img alt="space2.gif" src="Task%20And%20Function_files/space2.gif" id="lspace"></p></td>
</tr>
<tr>
<td><script type="text/javascript"><!--
google_ad_client = "pub-2374649057738228";
google_ad_width = 120;
google_ad_height = 60;
google_ad_format = "120x60_as_rimg";
google_cpa_choice = "CAAQ2eOZzgEaCD4zuVkdzt_CKI-293M";
//--></script>
<script type="text/javascript" src="Task%20And%20Function_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:120px;background-color:transparent"><ins id="aswift_1_anchor" style="display:block;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:120px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;" frameborder="0" height="60" scrolling="no" width="120"></iframe></ins></ins>
</td>
</tr>
<tr>
<td><p id="cent"><img alt="space2.gif" src="Task%20And%20Function_files/space2.gif" id="lspace"></p></td>
</tr>
</tbody></table>
</div>
</td>
<!--End Of Left Index-->

<td nosave="" colspan="3" valign="top" width="603">
<div align="left">
<table style="border-collapse: collapse" border="0" bordercolor="#111111" cellpadding="0" cellspacing="0" width="99%">
<tbody><tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td width="3%"></td>
<td width="3%"></td>
<td width="94%"> <script type="text/javascript"><!--
google_ad_client = "pub-2374649057738228";
google_ad_width = 728;
google_ad_height = 90;
</script>
<script type="text/javascript" src="Task%20And%20Function_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent"><ins id="aswift_2_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;" frameborder="0" height="90" scrolling="no" width="728"></iframe></ins></ins>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td align="center" bgcolor="#99FF99" width="3%">
<img alt="../images/main/bullet_green_ball.gif" src="Task%20And%20Function_files/bullet_green_ball.gif"></td>
<td bgcolor="#99FF99" width="94%">
<b><a name="Task"></a>Task</b>
</td>
</tr> 
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td width="94%"><p id="just">Tasks are used in all programming 
languages, generally known as procedures or subroutines. The lines of 
code are enclosed in task....end task brackets. Data is passed to the 
task, the processing done, and the result returned. They have to be 
specifically called, with data ins and outs, rather than just wired in 
to the general netlist. Included in the main body of code, they can be 
called many times, reducing code repetition.</p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td align="justify" width="94%">
<ul>
<li>    tasks are defined in the module in which they are used. It is 
possible to define a task in a separate file and use the compile 
directive 'include to include the task in the file which instantiates 
the task.</li>
<li>    tasks can include timing delays, like posedge, negedge, # delay and wait.</li>
<li>    tasks can have any number of inputs and outputs.</li>
<li>    The variables declared within the task are local to that task. 
The order of declaration within the task defines how the variables 
passed to the task by the caller are used.</li>
<li>    tasks can take, drive and source global variables, when no local
 variables are used. When local variables are used, basically output is 
assigned only at the end of task execution.</li>
<li>    tasks can call another task or function.</li>
<li>    tasks can be used for modeling both combinational and sequential logic.</li>
<li>    A task must be specifically called with a statement, it cannot be used within an expression as a function can.</li>
</ul>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td align="center" bgcolor="#FFCC66" width="3%">
<img alt="../images/main/bulllet_4dots_orange.gif" src="Task%20And%20Function_files/bulllet_4dots_orange.gif"></td>
<td bgcolor="#FFCC66" width="94%">
<b><a name="Syntax"></a>Syntax</b>
</td>
</tr> 
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td align="justify" width="94%">
<ul>
<li>    A task begins with keyword task and ends with keyword endtask</li>
<li>    Inputs and outputs are declared after the keyword task.</li>
<li>    Local variables are declared after input and output declaration.</li>
</ul>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td align="center" bgcolor="#FFCC66" width="3%">
<img alt="../images/main/bulllet_4dots_orange.gif" src="Task%20And%20Function_files/bulllet_4dots_orange.gif"></td>
<td bgcolor="#FFCC66" width="94%">
<b><a name="Example_-_Simple_Task"></a>Example - Simple Task</b>
</td>
</tr> 
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td width="94%">
<pre><b>
<span id="lo">  1</span> <font id="b">module</font> simple_task();
<span id="lo">  2</span> 
<span id="lo">  3</span> <font id="b">task</font> convert;
<span id="lo">  4</span> <font id="b">input</font> [7:0] temp_in;
<span id="lo">  5</span> <font id="b">output</font> [7:0] temp_out;
<span id="lo">  6</span> <font id="b">begin</font>
<span id="lo">  7</span>   temp_out<font id="sc"> = </font>(9/5) <font id="sc">*</font>( temp_in<font id="sc"> + </font>32)
<span id="lo">  8</span> <font id="b">end</font>
<span id="lo">  9</span> <font id="b">endtask</font>
<span id="lo"> 10</span> 
<span id="lo"> 11</span> <font id="b">endmodule</font>
</b></pre>
<font size="-1">You could download file simple_task.v <a href="http://www.asic-world.com/code/verilog_tutorial/simple_task.v" style="text-decoration: none;">here</a></font>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td align="center" bgcolor="#FFCC66" width="3%">
<img alt="../images/main/bulllet_4dots_orange.gif" src="Task%20And%20Function_files/bulllet_4dots_orange.gif"></td>
<td bgcolor="#FFCC66" width="94%">
<b><a name="Example_-__Task_using_Global_Variables"></a>Example -  Task using Global Variables</b>
</td>
</tr> 
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td width="94%">
<pre><b>
<span id="lo">  1</span> <font id="b">module</font> task_global();
<span id="lo">  2</span> 
<span id="lo">  3</span> <font id="b">reg</font> [7:0] temp_out;
<span id="lo">  4</span> <font id="b">reg</font> [7:0] temp_in;
<span id="lo">  5</span> 
<span id="lo">  6</span> <font id="b">task</font> convert;
<span id="lo">  7</span> <font id="b">begin</font>
<span id="lo">  8</span>   temp_out<font id="sc"> = </font>(9/5) <font id="sc">*</font>( temp_in<font id="sc"> + </font>32);
<span id="lo">  9</span> <font id="b">end</font>
<span id="lo"> 10</span> <font id="b">endtask</font>
<span id="lo"> 11</span> 
<span id="lo"> 12</span> <font id="b">endmodule</font>
</b></pre>
<font size="-1">You could download file task_global.v <a href="http://www.asic-world.com/code/verilog_tutorial/task_global.v" style="text-decoration: none;">here</a></font>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr align="center">
<td width="3%"></td>
<td width="3%"></td>
<td align="center" width="94%"> <script type="text/javascript"><!--
google_ad_client = "pub-2374649057738228";
google_ad_slot = "4035796826";
google_ad_width = 468;
google_ad_height = 60;
//--></script>
<script type="text/javascript" src="Task%20And%20Function_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px;background-color:transparent"><ins id="aswift_3_anchor" style="display:block;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_3" name="aswift_3" style="left:0;position:absolute;top:0;" frameborder="0" height="60" scrolling="no" width="468"></iframe></ins></ins>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td align="center" bgcolor="#FFCC66" width="3%">
<img alt="../images/main/bulllet_4dots_orange.gif" src="Task%20And%20Function_files/bulllet_4dots_orange.gif"></td>
<td bgcolor="#FFCC66" width="94%">
<b><a name="Calling_a_Task"></a>Calling a Task</b>
</td>
</tr> 
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td width="94%"><p id="just">Let's assume that the task in example 1 is 
stored in a file called mytask.v. Advantage of coding a task in a 
separate file, is that it can be used in multiple modules.</p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td width="94%">
<pre><b>
<span id="lo">  1</span> <font id="b">module</font>  task_calling (temp_a, temp_b, temp_c, temp_d);
<span id="lo">  2</span> <font id="b">input</font> [7:0] temp_a, temp_c;
<span id="lo">  3</span> <font id="b">output</font> [7:0] temp_b, temp_d;
<span id="lo">  4</span> <font id="b">reg</font> [7:0] temp_b, temp_d;
<span id="lo">  5</span> <font id="r">`include</font> <font id="p">"mytask.v"</font>
<span id="lo">  6</span>   	 
<span id="lo">  7</span> <font id="b">always</font> <font id="sc">@</font> (temp_a)
<span id="lo">  8</span> <font id="b">begin</font>	
<span id="lo">  9</span>   convert (temp_a, temp_b);
<span id="lo"> 10</span> <font id="b">end</font>  
<span id="lo"> 11</span> 
<span id="lo"> 12</span> <font id="b">always</font> <font id="sc">@</font> (temp_c)
<span id="lo"> 13</span> <font id="b">begin</font>	
<span id="lo"> 14</span>   convert (temp_c, temp_d);
<span id="lo"> 15</span> <font id="b">end</font>  
<span id="lo"> 16</span>   	 
<span id="lo"> 17</span> <font id="b">endmodule</font>
</b></pre>
<font size="-1">You could download file task_calling.v <a href="http://www.asic-world.com/code/verilog_tutorial/task_calling.v" style="text-decoration: none;">here</a></font>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td align="center" bgcolor="#FFCC66" width="3%">
<img alt="../images/main/bulllet_4dots_orange.gif" src="Task%20And%20Function_files/bulllet_4dots_orange.gif"></td>
<td bgcolor="#FFCC66" width="94%">
<b><a name="Example_-__CPU_Write_/_Read_Task"></a>Example -  CPU Write / Read Task</b>
</td>
</tr> 
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td width="94%"><p id="just">Below is the waveform used for writing into
 memory and reading from memory. We make the assumption that there is a 
need to use this interface from multiple agents. So we write the 
read/write as tasks.</p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td width="94%"><img alt="../images/verilog/task_cpu_wr_rd.gif" src="Task%20And%20Function_files/task_cpu_wr_rd.gif" border="0"></td></tr><tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td width="94%">
<pre><b>
<span id="lo">  1</span> <font id="b">module</font> bus_wr_rd_task();
<span id="lo">  2</span> 
<span id="lo">  3</span> <font id="b">reg</font> clk,rd,wr,ce;
<span id="lo">  4</span> <font id="b">reg</font> [7:0]  addr,data_wr,data_rd;
<span id="lo">  5</span> <font id="b">reg</font> [7:0]  read_data;
<span id="lo">  6</span> 
<span id="lo">  7</span> <font id="b">initial</font> <font id="b">begin</font>
<span id="lo">  8</span>   clk<font id="sc"> = </font>0;
<span id="lo">  9</span>   read_data<font id="sc"> = </font>0;
<span id="lo"> 10</span>   rd<font id="sc"> = </font>0;
<span id="lo"> 11</span>   wr<font id="sc"> = </font>0;
<span id="lo"> 12</span>   ce<font id="sc"> = </font>0;
<span id="lo"> 13</span>   addr<font id="sc"> = </font>0;
<span id="lo"> 14</span>   data_wr<font id="sc"> = </font>0;
<span id="lo"> 15</span>   data_rd<font id="sc"> = </font>0;
<span id="lo"> 16</span>   <font id="g">// Call the write and read tasks here
</font><span id="lo"> 17</span>  <font id="oc">  #1 </font> cpu_write(8'h11,8'hAA);
<span id="lo"> 18</span>  <font id="oc">  #1 </font> cpu_read(8'h11,read_data);
<span id="lo"> 19</span>  <font id="oc">  #1 </font> cpu_write(8'h12,8'hAB);
<span id="lo"> 20</span>  <font id="oc">  #1 </font> cpu_read(8'h12,read_data);
<span id="lo"> 21</span>  <font id="oc">  #1 </font> cpu_write(8'h13,8'h0A);
<span id="lo"> 22</span>  <font id="oc">  #1 </font> cpu_read(8'h13,read_data);
<span id="lo"> 23</span>  <font id="oc">  #100 </font> <font id="r">$finish</font>;
<span id="lo"> 24</span> <font id="b">end</font>
<span id="lo"> 25</span> <font id="g">// Clock Generator
</font><span id="lo"> 26</span> <font id="b">always</font>
<span id="lo"> 27</span>  <font id="oc">  #1 </font> clk<font id="sc"> = </font><font id="sc">~</font>clk;
<span id="lo"> 28</span> <font id="g">// CPU Read Task
</font><span id="lo"> 29</span> <font id="b">task</font> cpu_read;
<span id="lo"> 30</span>   <font id="b">input</font> [7:0]  address;
<span id="lo"> 31</span>   <font id="b">output</font> [7:0] data;
<span id="lo"> 32</span>   <font id="b">begin</font>
<span id="lo"> 33</span>     <font id="r">$display</font> (<font id="p">"%g CPU Read  task with address : %h"</font>, <font id="r">$time</font>, address);
<span id="lo"> 34</span>     <font id="r">$display</font> (<font id="p">"%g  -&gt; Driving CE, RD and ADDRESS on to bus"</font>, <font id="r">$time</font>);
<span id="lo"> 35</span>     <font id="sc">@</font> (<font id="b">posedge</font> clk);
<span id="lo"> 36</span>     addr<font id="sc"> = </font>address;
<span id="lo"> 37</span>     ce<font id="sc"> = </font>1;
<span id="lo"> 38</span>     rd<font id="sc"> = </font>1;
<span id="lo"> 39</span>     <font id="sc">@</font> (<font id="b">negedge</font> clk);
<span id="lo"> 40</span>     data<font id="sc"> = </font>data_rd;
<span id="lo"> 41</span>     <font id="sc">@</font> (<font id="b">posedge</font> clk);
<span id="lo"> 42</span>     addr<font id="sc"> = </font>0;
<span id="lo"> 43</span>     ce<font id="sc"> = </font>0;
<span id="lo"> 44</span>     rd<font id="sc"> = </font>0;
<span id="lo"> 45</span>     <font id="r">$display</font> (<font id="p">"%g CPU Read  data              : %h"</font>, <font id="r">$time</font>, data);
<span id="lo"> 46</span>     <font id="r">$display</font> (<font id="p">"======================"</font>);
<span id="lo"> 47</span>   <font id="b">end</font>
<span id="lo"> 48</span> <font id="b">endtask</font>
<span id="lo"> 49</span> <font id="g">// CU Write Task
</font><span id="lo"> 50</span> <font id="b">task</font> cpu_write;
<span id="lo"> 51</span>   <font id="b">input</font> [7:0]  address;
<span id="lo"> 52</span>   <font id="b">input</font> [7:0] data;
<span id="lo"> 53</span>   <font id="b">begin</font>
<span id="lo"> 54</span>     <font id="r">$display</font> (<font id="p">"%g CPU Write task with address : %h Data : %h"</font>, 
<span id="lo"> 55</span>       <font id="r">$time</font>, address,data);
<span id="lo"> 56</span>     <font id="r">$display</font> (<font id="p">"%g  -&gt; Driving CE, WR, WR data and ADDRESS on to bus"</font>, 
<span id="lo"> 57</span>       <font id="r">$time</font>);
<span id="lo"> 58</span>     <font id="sc">@</font> (<font id="b">posedge</font> clk);
<span id="lo"> 59</span>     addr<font id="sc"> = </font>address;
<span id="lo"> 60</span>     ce<font id="sc"> = </font>1;
<span id="lo"> 61</span>     wr<font id="sc"> = </font>1;
<span id="lo"> 62</span>     data_wr<font id="sc"> = </font>data;
<span id="lo"> 63</span>     <font id="sc">@</font> (<font id="b">posedge</font> clk);
<span id="lo"> 64</span>     addr<font id="sc"> = </font>0;
<span id="lo"> 65</span>     ce<font id="sc"> = </font>0;
<span id="lo"> 66</span>     wr<font id="sc"> = </font>0;
<span id="lo"> 67</span>     <font id="r">$display</font> (<font id="p">"======================"</font>);
<span id="lo"> 68</span>   <font id="b">end</font>
<span id="lo"> 69</span> <font id="b">endtask</font>
<span id="lo"> 70</span> 
<span id="lo"> 71</span> <font id="g">// Memory model for checking tasks
</font><span id="lo"> 72</span> <font id="b">reg</font> [7:0] mem [0:255];
<span id="lo"> 73</span> 
<span id="lo"> 74</span> <font id="b">always</font> <font id="sc">@</font> (addr <font id="b">or</font> ce <font id="b">or</font> rd <font id="b">or</font> wr <font id="b">or</font> data_wr)
<span id="lo"> 75</span> <font id="b">if</font> (ce) <font id="b">begin</font>
<span id="lo"> 76</span>   <font id="b">if</font> (wr) <font id="b">begin</font>
<span id="lo"> 77</span>     mem[addr]<font id="sc"> = </font>data_wr;
<span id="lo"> 78</span>   <font id="b">end</font>
<span id="lo"> 79</span>   <font id="b">if</font> (rd) <font id="b">begin</font>
<span id="lo"> 80</span>     data_rd<font id="sc"> = </font>mem[addr];
<span id="lo"> 81</span>   <font id="b">end</font>
<span id="lo"> 82</span> <font id="b">end</font>
<span id="lo"> 83</span> 
<span id="lo"> 84</span> <font id="b">endmodule</font>
</b></pre>
<font size="-1">You could download file bus_wr_rd_task.v <a href="http://www.asic-world.com/code/verilog_tutorial/bus_wr_rd_task.v" style="text-decoration: none;">here</a></font>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td width="94%"><p id="just"><b>Simulation Output</b></p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td bgcolor="#ddeeff" width="94%">
<pre><font color="black" size="2"> 1 CPU Write task with address : 11 Data : aa
 1  -&gt; Driving CE, WR, WR data and ADDRESS on to bus
 ======================
 4 CPU Read  task with address : 11
 4  -&gt; Driving CE, RD and ADDRESS on to bus
 7 CPU Read  data              : aa
 ======================
 8 CPU Write task with address : 12 Data : ab
 8  -&gt; Driving CE, WR, WR data and ADDRESS on to bus
 ======================
 12 CPU Read  task with address : 12
 12  -&gt; Driving CE, RD and ADDRESS on to bus
 15 CPU Read  data              : ab
 ======================
 16 CPU Write task with address : 13 Data : 0a
 16  -&gt; Driving CE, WR, WR data and ADDRESS on to bus
 ======================
 20 CPU Read  task with address : 13
 20  -&gt; Driving CE, RD and ADDRESS on to bus
 23 CPU Read  data              : 0a
 ======================
</font></pre>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td align="center" bgcolor="#99FF99" width="3%">
<img alt="../images/main/bullet_green_ball.gif" src="Task%20And%20Function_files/bullet_green_ball.gif"></td>
<td bgcolor="#99FF99" width="94%">
<b><a name="Function"></a>Function</b>
</td>
</tr> 
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td width="94%"><p id="just">A Verilog HDL function is the same as a 
task, with very little differences, like function cannot drive more than
 one output, can not contain delays.</p></td>
</tr>
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td align="justify" width="94%">
<ul>
<li>    functions are defined in the module in which they are used. It 
is possible to define functions in separate files and use compile 
directive 'include to include the function in the file which 
instantiates the task.</li>
<li>    functions <b>can not include timing delays</b>, like posedge, negedge, # delay, which means that functions should be executed in "zero" time delay.</li>
<li>    functions can have any number of inputs but only one output.</li>
<li>    The variables declared within the function are local to that 
function. The order of declaration within the function defines how the 
variables passed to the function by the caller are used.</li>
<li>    functions can take, drive, and source global variables, when no 
local variables are used. When local variables are used, basically 
output is assigned only at the end of function execution.</li>
<li>    functions can be used for <b>modeling combinational logic</b>.</li>
<li>    functions can <b>call other functions, but can not call tasks</b>.</li>
</ul>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td align="center" bgcolor="#FFCC66" width="3%">
<img alt="../images/main/bulllet_4dots_orange.gif" src="Task%20And%20Function_files/bulllet_4dots_orange.gif"></td>
<td bgcolor="#FFCC66" width="94%">
<b><a name="Syntax"></a>Syntax</b>
</td>
</tr> 
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td align="justify" width="94%">
<ul>
<li>      A function begins with keyword <b>function</b> and ends with keyword <b>endfunction</b></li>
<li>      <b>inputs</b> are declared after the keyword function.</li>
</ul>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td align="center" bgcolor="#FFCC66" width="3%">
<img alt="../images/main/bulllet_4dots_orange.gif" src="Task%20And%20Function_files/bulllet_4dots_orange.gif"></td>
<td bgcolor="#FFCC66" width="94%">
<b><a name="Example_-_Simple_Function"></a>Example - Simple Function</b>
</td>
</tr> 
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td width="94%">
<pre><b>
<span id="lo">  1</span> <font id="b">module</font> simple_function();
<span id="lo">  2</span> 
<span id="lo">  3</span> <font id="b">function</font>  myfunction;
<span id="lo">  4</span> <font id="b">input</font> a, b, c, d;
<span id="lo">  5</span> <font id="b">begin</font>
<span id="lo">  6</span>   myfunction<font id="sc"> = </font>((a+b)<font id="sc"> + </font>(c-d));
<span id="lo">  7</span> <font id="b">end</font>
<span id="lo">  8</span> <font id="b">endfunction</font>
<span id="lo">  9</span> 
<span id="lo"> 10</span> <font id="b">endmodule</font>
</b></pre>
<font size="-1">You could download file simple_function.v <a href="http://www.asic-world.com/code/verilog_tutorial/simple_function.v" style="text-decoration: none;">here</a></font>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td align="center" bgcolor="#FFCC66" width="3%">
<img alt="../images/main/bulllet_4dots_orange.gif" src="Task%20And%20Function_files/bulllet_4dots_orange.gif"></td>
<td bgcolor="#FFCC66" width="94%">
<b><a name="Example_-_Calling_a_Function"></a>Example - Calling a Function</b>
</td>
</tr> 
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3"></td>
<td id="m3"></td>
<td width="94%">
<pre><b>
<span id="lo">  1</span> <font id="b">module</font>  function_calling(a, b, c, d, e, f);
<span id="lo">  2</span>                    
<span id="lo">  3</span> <font id="b">input</font> a, b, c, d, e ;
<span id="lo">  4</span> <font id="b">output</font> f;
<span id="lo">  5</span> <font id="b">wire</font> f;
<span id="lo">  6</span> <font id="r">`include</font> <font id="p">"myfunction.v"</font>
<span id="lo">  7</span>   	 
<span id="lo">  8</span> <font id="b">assign</font> f<font id="sc"> = </font> (myfunction (a,b,c,d))<font id="sc"> ? </font>e :0;
<span id="lo">  9</span>   	 
<span id="lo"> 10</span> <font id="b">endmodule</font>
</b></pre>
<font size="-1">You could download file function_calling.v <a href="http://www.asic-world.com/code/verilog_tutorial/function_calling.v" style="text-decoration: none;">here</a></font>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
<tr align="center">
<td width="3%"></td>
<td width="3%"></td>
<td align="center" width="94%"> <script type="text/javascript"><!--
google_ad_client = "pub-2374649057738228";
google_ad_slot = "4035796826";
google_ad_width = 468;
google_ad_height = 60;
//--></script>
<script type="text/javascript" src="Task%20And%20Function_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px;background-color:transparent"><ins id="aswift_4_anchor" style="display:block;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_4" name="aswift_4" style="left:0;position:absolute;top:0;" frameborder="0" height="60" scrolling="no" width="468"></iframe></ins></ins>
</td>
</tr>
<tr>
<td id="m3">&nbsp;</td>
<td id="m3">&nbsp;</td>
<td id="m94"><p id="cent"><img alt="space.gif" src="Task%20And%20Function_files/space.gif" id="space"></p></td>
</tr>
</tbody></table>
</div>
</td>
<!-- End of Main -->
<td nosave="" rowspan="2" bgcolor="#FFFFFF" valign="top" width="120">
<div align="center">
<table border="0" cellpadding="0" cellspacing="0" width="100">
<tbody><tr>
<td>
</td>
</tr>
<tr>
<td><p id="cent"><img alt="space2.gif" src="Task%20And%20Function_files/space2.gif" id="lspace"></p></td>
</tr>
<tr>
<td><p id="cent"><img alt="space2.gif" src="Task%20And%20Function_files/space2.gif" id="lspace"></p></td>
</tr>
<tr>
<td><p id="cent"><img alt="space2.gif" src="Task%20And%20Function_files/space2.gif" id="lspace"></p></td>
</tr>
<tr>
<td><p id="cent"><img alt="space2.gif" src="Task%20And%20Function_files/space2.gif" id="lspace"></p></td>
</tr>
<tr align="center">
<td align="center"> <script type="text/javascript"><!--
google_ad_client = "pub-2374649057738228";
google_ad_width = 120;
google_ad_height = 600;
google_ad_format = "120x600_as";
google_ad_channel ="3139158719";
//--></script>
<script type="text/javascript" src="Task%20And%20Function_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:120px;background-color:transparent"><ins id="aswift_5_anchor" style="display:block;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:120px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_5" name="aswift_5" style="left:0;position:absolute;top:0;" frameborder="0" height="600" scrolling="no" width="120"></iframe></ins></ins>
</td>
</tr>
<tr>
<td><p id="cent"><img alt="space2.gif" src="Task%20And%20Function_files/space2.gif" id="lspace"></p></td>
</tr>
</tbody></table>
</div>
</td>
</tr>
<tr nosave="">
<td nosave="" valign="top" width="201">
<p align="center"><a href="http://www.asic-world.com/verilog/task_func.html"><img src="Task%20And%20Function_files/back.jpg" height="54" border="0" width="175"></a>
</p></td>
<td nosave="" valign="top" width="201">
<p align="center"><a href="http://www.asic-world.com/verilog/task_func.html"><img src="Task%20And%20Function_files/homenew.jpg" height="54" border="0" width="122"></a>
</p></td>
<td nosave="" valign="top" width="201">
<p align="center"><a href="http://www.asic-world.com/verilog/sys_task_func.html"><img src="Task%20And%20Function_files/next.jpg" height="54" border="0" width="176"></a>
</p></td>
</tr>
<tr nosave="">
<td nosave="" align="center" bgcolor="#c0c0c0" valign="middle" width="110">
<p align="center">
<img src="Task%20And%20Function_files/logo.jpg" height="92" border="0" width="88"></p>
</td>
<td nosave="" colspan="3" valign="top" width="603">
<div align="center">

<table border="0" cellpadding="0" cellspacing="0" width="503">
<tbody><tr>
<td id="c503"><p id="cent"><b><font id="copyGreen">&nbsp;&nbsp;</font></b></p></td>
</tr>
<tr>
<td id="c503"><p id="cent"><b><font id="copyGreen">Copyright � 1998-2014</font></b></p></td>
</tr>
<tr>
<td id="c503"><p id="cent"><b><font id="copyBlack">Deepak Kumar Tala - All rights reserved</font></b></p></td>
</tr>
<tr>
<td id="c503">
<p id="cent"><b><font id="copyContact">Do you have any Comment? mail me at:</font><font id="small"><a href="mailto:deepak@asic-world.com">deepak@asic-world.com</a></font></b>
</p></td>
</tr>
</tbody></table>
</div>
</td>
</tr></tbody></table></center>
</div></center>


</body></html>